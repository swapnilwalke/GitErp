/*
 * < ÀKURA, This application manages the daily activities of a Teacher and a Student of a School>
 *
 * Copyright (C) 2012 Virtusa Corporation.
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

use `akura`;

--
-- replace view to be used only for completed marks records.
--

CREATE OR REPLACE VIEW ABSENTEE_LIST_VIEW AS 
SELECT 
STUDENT_TERM_MARK.STUDENT_TERM_MARKS_ID AS STUDENT_TERM_MARKS_ID, 
STUDENT.NATIONALITY_ID as NATIONALITY_ID, 
STUDENT.FULL_NAME as FULL_NAME , 
STUDENT.ADMISSION_NO as ADMISSION_NO, 
CLASS_GRADE.DESCRIPTION as CLASS_DESCRIPTION, 
GRADE.DESCRIPTION as GRADE_DESCRIPTION , 
TERM.DESCRIPTION as TERM_DESCRIPTION , 
SUBJECT.DESCRIPTION as SUBJECT_DESCRIPTION , 
STUDENT_TERM_MARK.MARKS as MARKS, 
STUDENT_TERM_MARK.IS_ABSENT as IS_ABSENT,
MARKING_FLAG.MARKING_COMPLETED AS MARKING_COMPLETED

FROM STUDENT_TERM_MARK

LEFT JOIN STUDENT_CLASS_INFO
ON STUDENT_TERM_MARK.STUDENT_CLASS_INFO_ID = STUDENT_CLASS_INFO.STUDENT_CLASS_INFO_ID

LEFT JOIN STUDENT
ON STUDENT_CLASS_INFO.STUDENT_ID = STUDENT.STUDENT_ID

LEFT JOIN CLASS_GRADE
ON STUDENT_CLASS_INFO.CLASS_GRADE_ID = CLASS_GRADE.CLASS_GRADE_ID 

LEFT JOIN MARKING_FLAG
ON (CLASS_GRADE.CLASS_GRADE_ID = MARKING_FLAG.CLASS_GRADE_ID AND MARKING_FLAG.MARKING_COMPLETED = TRUE)

LEFT JOIN CLASS
ON CLASS_GRADE.CLASS_ID = CLASS.CLASS_ID

LEFT JOIN GRADE
ON CLASS_GRADE.GRADE_ID = GRADE.GRADE_ID

LEFT JOIN GRADE_SUBJECT
ON STUDENT_TERM_MARK.GRADE_SUBJECT_ID = GRADE_SUBJECT.GRADE_SUBJECT_ID


LEFT JOIN SUBJECT
ON GRADE_SUBJECT.SUBJECT_ID = SUBJECT.SUBJECT_ID

LEFT JOIN TERM
ON (STUDENT_TERM_MARK.TERM_ID = TERM.TERM_ID AND MARKING_FLAG.TERM_ID=TERM.TERM_ID)

WHERE TERM.DESCRIPTION IS NOT NULL

ORDER BY STUDENT.FULL_NAME,TERM.DESCRIPTION;


/* replace student term marks view. */
CREATE OR REPLACE VIEW STUDENT_TERM_MARKS_VIEW 

AS
	SELECT stm.IS_ABSENT AS IS_ABSENT, 
	stm.STUDENT_TERM_MARKS_ID AS STUDENT_TERM_MARKS_ID,
	stm.MARKS AS MARKS,
	t.DESCRIPTION AS TERM,
	s.DESCRIPTION AS SUBJECT_NAME,
	sci.STUDENT_ID AS STUDENT_ID,
	sci.YEAR AS YEAR,
	stu.ADMISSION_NO AS ADMISSION_NO,
	stu.NAME_WT_INITIALS AS NAME_WT_INITIALS,
	sci.CLASS_GRADE_ID AS CLASS_GRADE_ID,
	sci.STUDENT_CLASS_INFO_ID AS STUDENT_CLASS_INFO_ID,
	stm.TERM_ID AS TERM_ID,
	gs.GRADE_SUBJECT_ID AS GRADE_SUBJECT_ID,
	stu.LANGUAGE_ID AS LANGUAGE_ID ,
	stm.EDIT_MARK_STATE AS EDIT_MARK_STATE
FROM STUDENT_TERM_MARK stm, STUDENT_CLASS_INFO sci, 
	TERM t, GRADE_SUBJECT gs, SUBJECT as s, STUDENT stu
	
WHERE stm.STUDENT_CLASS_INFO_ID=sci.STUDENT_CLASS_INFO_ID
	AND t.TERM_ID=stm.TERM_ID 
	AND gs.GRADE_SUBJECT_ID=stm.GRADE_SUBJECT_ID 
	AND s.SUBJECT_ID=gs.SUBJECT_ID 
	AND stu.STUDENT_ID=sci.STUDENT_ID;
	

/* replace teacher attendance view. */
CREATE OR REPLACE VIEW EMPLOYEEATTENDANCE
AS 
select dta.DATE AS `DDDDate`,
s.STAFF_ID AS `StaffId`,
s.REGISTRATION_NO AS `DDDEmpNo`,
s.FULL_NAME AS `DDDEmpName`,
dta.TIME_IN AS `TimeIn`,
dta.TIME_OUT AS `TimeOut`,
format((time_to_sec(timediff(dta.TIME_OUT,
dta.TIME_IN)) / 3600),2) AS NumHours
from DAILY_TEACHER_ATTENDANCE dta, STAFF s
where dta.STAFF_ID=s.Staff_id 
group by dta.DATE,dta.STAFF_ID;
	
	
/* Annual student attendance view. */	
CREATE OR REPLACE VIEW  ANNUAL_STUDENT_ATTENDANCE_VIEW 
AS
	SELECT dsa.STUDENT_ID AS 'STUDENT_ID', 
		s.ADMISSION_NO AS 'ADMISSION_NO',
		s.FULL_NAME AS 'FULL_NAME', 
		YEAR(dsa.DATE) AS 'YEAR' , 
    COUNT(s.STUDENT_ID) AS 'PRESENT_COUNT', 
		sci.CLASS_GRADE_ID AS 'CLASS_GRADE_ID'  
	FROM DAILY_STUDENT_ATTENDANCE dsa 
	INNER JOIN STUDENT s  
    ON dsa.STUDENT_ID = s.STUDENT_ID 
	INNER JOIN STUDENT_CLASS_INFO sci 
    ON s.STUDENT_ID = sci.STUDENT_ID
	WHERE YEAR(dsa.DATE) = YEAR(CURDATE())
	GROUP BY dsa.STUDENT_ID, 
		sci.STUDENT_CLASS_INFO_ID	