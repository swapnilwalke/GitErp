/*
 * < ÀKURA, This application manages the daily activities of a Teacher and a Student of a School>
 *
 * Copyright (C) 2012 Virtusa Corporation.
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

-- update SMS views

-- STUDENT_CLUB_SOCIETY_VIEW  #################

use `akura`;

CREATE OR REPLACE VIEW STUDENT_CLUB_SOCIETY_VIEW AS
Select
STUDENT_CLUB_SOCIETY.STUDENT_CLUB_SOCIETY_ID AS STUDENT_CLUB_SOCIETY_ID,
STUDENT_CLUB_SOCIETY.STUDENT_ID AS STUDENT_ID ,
STUDENT.ADMISSION_NO AS ADMISSION_NO,
STUDENT.FULL_NAME AS FULL_NAME,
CLUB_SOCIETY.NAME AS CLUB_SOCIETY_NAME,
YEAR(STUDENT_CLUB_SOCIETY.YEAR) AS CLUB_SOCIETY_YEAR,
POSITION.DESCRIPTION AS POSITION_DESCRIPTION,
STUDENT_CLUB_SOCIETY.MEMBERSHIP_NO AS MEMBERSHIP_NO,
STUDENT_CLUB_SOCIETY.STATUS AS STATUS


from STUDENT_CLUB_SOCIETY

LEFT JOIN STUDENT
ON  STUDENT_CLUB_SOCIETY.STUDENT_ID =STUDENT.STUDENT_ID

LEFT JOIN CLUB_SOCIETY
ON STUDENT_CLUB_SOCIETY.CLUB_SOCIETY_ID = CLUB_SOCIETY.CLUB_SOCIETY_ID

LEFT JOIN POSITION
ON STUDENT_CLUB_SOCIETY.POSITION_ID = POSITION.POSITION_ID;




-- purpose of this view to show the student absent list & used for student perfomance marks also.  

CREATE OR REPLACE VIEW ABSENTEE_LIST_VIEW AS 
SELECT 
STUDENT_TERM_MARK.STUDENT_TERM_MARKS_ID AS STUDENT_TERM_MARKS_ID, 
STUDENT.NATIONALITY_ID as NATIONALITY_ID, 
STUDENT.FULL_NAME as FULL_NAME , 
STUDENT.ADMISSION_NO as ADMISSION_NO, 
CLASS_GRADE.DESCRIPTION as CLASS_DESCRIPTION, 
GRADE.DESCRIPTION as GRADE_DESCRIPTION , 
TERM.DESCRIPTION as TERM_DESCRIPTION , 
SUBJECT.DESCRIPTION as SUBJECT_DESCRIPTION , 
STUDENT_TERM_MARK.MARKS as MARKS, 
STUDENT_TERM_MARK.IS_ABSENT as IS_ABSENT  


FROM STUDENT_TERM_MARK

LEFT JOIN STUDENT_CLASS_INFO
ON STUDENT_TERM_MARK.STUDENT_CLASS_INFO_ID = STUDENT_CLASS_INFO.STUDENT_CLASS_INFO_ID

LEFT JOIN STUDENT
ON STUDENT_CLASS_INFO.STUDENT_ID = STUDENT.STUDENT_ID

LEFT JOIN CLASS_GRADE
ON STUDENT_CLASS_INFO.CLASS_GRADE_ID = CLASS_GRADE.CLASS_GRADE_ID 

LEFT JOIN CLASS
ON CLASS_GRADE.CLASS_ID = CLASS.CLASS_ID

LEFT JOIN GRADE
ON CLASS_GRADE.GRADE_ID = GRADE.GRADE_ID

LEFT JOIN GRADE_SUBJECT
ON STUDENT_TERM_MARK.GRADE_SUBJECT_ID = GRADE_SUBJECT.GRADE_SUBJECT_ID


LEFT JOIN SUBJECT
ON GRADE_SUBJECT.SUBJECT_ID = SUBJECT.SUBJECT_ID

LEFT JOIN TERM
ON STUDENT_TERM_MARK.TERM_ID = TERM.TERM_ID

ORDER BY STUDENT.FULL_NAME,TERM.DESCRIPTION;


-- STUDENT_TERM_MARKS_VIEW - purpose of this view to show the student marks in accedemic details page and progress bar  #################
create or replace view STUDENT_TERM_MARKS_VIEW as
select stm.IS_ABSENT as IS_ABSENT,
stm.STUDENT_TERM_MARKS_ID as STUDENT_TERM_MARKS_ID,
stm.MARKS as MARKS,
t.DESCRIPTION as TERM,
s.DESCRIPTION as SUBJECT_NAME,
sci.STUDENT_ID as STUDENT_ID,
sci.YEAR as YEAR
from STUDENT_TERM_MARK stm, STUDENT_CLASS_INFO sci, TERM t, GRADE_SUBJECT gs, SUBJECT as s
where stm.STUDENT_CLASS_INFO_ID=sci.STUDENT_CLASS_INFO_ID and
t.TERM_ID=stm.TERM_ID and
gs.GRADE_SUBJECT_ID=stm.GRADE_SUBJECT_ID and s.SUBJECT_ID=gs.SUBJECT_ID;


-- views for attendance reports
-- update SMS STUDENT ATTENDENCE views


CREATE OR REPLACE VIEW STUDENTATTENDANCE
AS
select dsa.DATE AS DDDDate,
dayname(dsa.DATE) AS DayName,
s.ADMISSION_NO AS DDDEmpNo,
s.FULL_NAME AS DDDEmpName,
dsa.TIME_IN AS TimeIn,
dsa.TIME_OUT AS TimeOut,
format((time_to_sec(timediff(dsa.TIME_OUT,
dsa.TIME_IN)) / 3600),2) AS NumHours
from DAILY_STUDENT_ATTENDANCE dsa, STUDENT s where dsa.Student_id=s.student_id
group by dsa.DATE,dsa.student_id;



CREATE OR REPLACE VIEW EMPLOYEEATTENDANCE
AS 
select dta.DATE AS `DDDDate`,
s.REGISTRATION_NO AS `DDDEmpNo`,
s.FULL_NAME AS `DDDEmpName`,
dta.TIME_IN AS `TimeIn`,
dta.TIME_OUT AS `TimeOut`,
format((time_to_sec(timediff(dta.TIME_OUT,
dta.TIME_IN)) / 3600),2) AS NumHours
from DAILY_TEACHER_ATTENDANCE dta, STAFF s 
where dta.STAFF_ID=s.Staff_id
group by dta.DATE,dta.STAFF_ID;
